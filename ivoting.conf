# Add a node to connect. Format: <ip>:<port>
# addnode = 192.168.1.4:22083

# Bind to given address and always listen on it
# bindport = 22083

# Bind to given address and always listen on it
# bindaddress = 0.0.0.0

# Hidden service port
# onionport = 22086

# Specify data directory
# datadir = ./ivoting

# Number of threads
# par = 0

# Default transport on which our ivoting RPC will listen (e.g. \"udsocket\" for unix domain socket, or \"tcp\" for good old TCP
# for linux, OSX:
# rpc-transp = udsocket
# for windows:
# rpc-transp = tcp

# Name of file to be used as the Unix Domain Socket (used only when we have RPC over \"udsocket\")
# rpc-udsocket-file = /tmp/vc_rpc

# RPC Port for TCP socket (default: 22084)
# rpc-tcp-port = 22084

# Password in halfpass mode - the text (1st half)
# rpc-pass-halfpass-text = password

# Password in halfpass mode - the file to read with password (2nd half)
# rpc-pass-halfpass-file = password

# RPC password in simple mode - entire password. This is not secure, other local programs might see it in list of processes
# rpc-pass-simplepass = password

# If true then only one RPC connection will be accepted, and after it disconnects program should quit
# rpc-single-instance = false

# Use \"rpcjson\" then server will reply in pure RPCJSON texts (you have to parse thes stream into messages yourself) or use \"rpcmsg\" to get it as our wrapped format
# rpc-reply-format = rpcmsg

